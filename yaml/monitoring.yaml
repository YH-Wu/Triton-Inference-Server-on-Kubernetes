prometheusOperator:
  nodeSelector:
    node-role.kubernetes.io/master: ""

prometheus:
  ingress:
    pathType: ImplementationSpecific
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/rewrite-target: /
  server:
    persistentVolume:
      enabled: true
  prometheusSpec:
    additionalScrapeConfigs:
    - job_name: gpu-metrics
      scrape_interval: 1s
      metrics_path: /metrics
      scheme: http
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - gpu-operator-resources
          - monitoring
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: kubernetes_node
      - source_labels: [__meta_kubernetes_pod_host_ip]
        action: replace
        target_label: kubernetes_ip
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
    nodeSelector:
      node-role.kubernetes.io/master: ""
  service:
    type: NodePort
    nodePort: 30500
  additionalServiceMonitors:
  - name: dcgm-exporter
    selector:
      matchLabels:
        app: dcgm-exporter
    endpoints:
    - port: scrape
      interval: 1s
      honorLabels: true       
  #additionalServiceMonitors for Triton Inference Server
  - name: triton-exporter
    selector:
      matchLabels:
        app: tritoninferenceserver 
        #Check app name by describe the deployment
    namespaceSelector:
      matchNames:
        - default #Check namespace by describe the deployment    
    endpoints:
    - port: metrics-inference-server 
      #Check port by describe the deployment
      interval: 1s
      honorLabels: true
  serviceMonitorsSelector:
    matchLabels:
      prometheus: "kube-prometheus"

alertmanager:
  ingress:
    pathType: ImplementationSpecific
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/rewrite-target: /
  alertmanagerSpec:
    nodeSelector:
      node-role.kubernetes.io/master: ""
  service:
    type: NodePort
    nodePort: 30400

grafana:
  adminPassword: deepops
  ingress:
    pathType: ImplementationSpecific
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/rewrite-target: /
  nodeSelector:
    node-role.kubernetes.io/master: ""
  service:
    type: NodePort
    nodePort: 30200
  serverDashboardConfigmaps:
    - kube-prometheus-grafana-gpu
